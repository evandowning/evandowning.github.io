<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Evan Downing - misc</title><link href="https://www.evandowning.com/" rel="alternate"></link><link href="https://www.evandowning.com/feeds/misc.atom.xml" rel="self"></link><id>https://www.evandowning.com/</id><updated>2025-06-26T00:00:00-04:00</updated><subtitle>Cybersecurity Researcher</subtitle><entry><title>Workflow</title><link href="https://www.evandowning.com/workflow.html" rel="alternate"></link><published>2024-11-11T00:00:00-05:00</published><updated>2025-06-26T00:00:00-04:00</updated><author><name>Evan Downing</name></author><id>tag:www.evandowning.com,2024-11-11:/workflow.html</id><summary type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This post discusses my daily workflow. I am sharing it in case it is helpful for others to read.&lt;/p&gt;
&lt;h2&gt;Starting the day&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read unread emails and unread Slack messages. Respond to everything.&lt;/li&gt;
&lt;li&gt;Check personal goals and their progress for the year.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Gutcheck work&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Review each project's motivation, goals, "secret …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This post discusses my daily workflow. I am sharing it in case it is helpful for others to read.&lt;/p&gt;
&lt;h2&gt;Starting the day&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read unread emails and unread Slack messages. Respond to everything.&lt;/li&gt;
&lt;li&gt;Check personal goals and their progress for the year.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Gutcheck work&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Review each project's motivation, goals, "secret sauce", current status, and timeline to finish. Do they make sense?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.darpa.mil/work-with-us/heilmeier-catechism"&gt;Heilmeier Catechism&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;What are you trying to do? Articulate your objectives using absolutely no jargon.&lt;/li&gt;
&lt;li&gt;How is it done today, and what are the limits of current practice?&lt;/li&gt;
&lt;li&gt;What is new in your approach and why do you think it will be successful?&lt;/li&gt;
&lt;li&gt;Who cares? If you are successful, what difference will it make?&lt;/li&gt;
&lt;li&gt;What are the risks?&lt;/li&gt;
&lt;li&gt;How much will it cost?&lt;/li&gt;
&lt;li&gt;How long will it take?&lt;/li&gt;
&lt;li&gt;What are the midterm and final "exams" to check for success?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Writing papers&lt;ul&gt;
&lt;li&gt;What problem are you solving?&lt;/li&gt;
&lt;li&gt;Why is it an important problem?&lt;/li&gt;
&lt;li&gt;What are the existing approaches? Why are they not sufficient?&lt;/li&gt;
&lt;li&gt;What is your approach? Why is it more effective, efficient, novel, etc?&lt;/li&gt;
&lt;li&gt;How do you implement it? Why is that a good and practical way?&lt;/li&gt;
&lt;li&gt;How do you evaluate your approach and system? Why is the evaluation fair and realistic? How do the results support the goals and claims of your approach and system?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Coding&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Work on code for each project.&lt;/li&gt;
&lt;li&gt;Automate linting and unit tests via &lt;a href="https://github.com/features/actions"&gt;Github actions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Write Proposals&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create an overview diagram of what the system will look like. What happens first, second, third, etc. in the pipeline. What is the input? What is the output?&lt;/li&gt;
&lt;li&gt;Write &amp;amp; submit an abstract describing the solution.&lt;/li&gt;
&lt;li&gt;Fill in the front and back matter on the proposal. Now you know how many pages you have to work with to write the technical content.&lt;/li&gt;
&lt;li&gt;Create a real-world motivating example (1-2 paragraphs) you will use throughout the proposal.&lt;ul&gt;
&lt;li&gt;This is a framing device to go back and talk about how the solution will handle each challenge in the motivating example.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Split the system into components (which should already be apparent by the diagram) and assign engineers to tackle each part.&lt;/li&gt;
&lt;li&gt;Make sure you include the exact metrics the BAA is asking for and say your solution will accomplish them.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Leadership&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Break each project down into 2 or 3 parts, and assign each person one part to own.&lt;/li&gt;
&lt;li&gt;For each project, have an end-goal in mind and an end-date. I.e., what specifically do you want to accomplish by when?&lt;/li&gt;
&lt;li&gt;Everyone self-updates their progress for you to present at status updates, as well as allows you to ask and answer questions there (an internal Google Doc).&lt;/li&gt;
&lt;li&gt;For each status update, create slides and meeting meetings (shared with the client). Have action items they agree to (ranked by importance) for the next meeting.&lt;/li&gt;
&lt;li&gt;For each status update presentation, create ~6 slides to share with the client. That way, it is easy for them to track your progress over time.&lt;ul&gt;
&lt;li&gt;Agenda&lt;/li&gt;
&lt;li&gt;Running list of Insights and Contributions&lt;/li&gt;
&lt;li&gt;2-3 updates (visual/graph/numbers of results)&lt;/li&gt;
&lt;li&gt;Insights for each update -- What did I learn? What is novel/interesting?&lt;/li&gt;
&lt;li&gt;Next steps -- From what I learned last week, what will I do this week?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you are away on leave, assign someone to lead in your place, and notify the client who the lead contact will be until you get back.&lt;/li&gt;
&lt;li&gt;Overspend on the front end of a project, so you can get far enough along that you can divert your attention if needed (e.g., a proposal needs your attention or you have meetings/trainings/other responsibilities to take care of later).&lt;/li&gt;
&lt;li&gt;Every time there is a problem or something does not go according to plan, ask the Five Whys (from The Lean Startup book). Ask "why" 5 times, and you will usually identify the root cause of an issue. Fix the fifth (final) "why" first, then fix the other "whys" if they pop up again. Blame the problem, not the person. If someone makes a mistake, it is our fault it was easy for them to make that mistake.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;End of the day&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Work on the draft of academic paper or client report&lt;/li&gt;
&lt;li&gt;This is an up-to-date version of the final draft. The weekly meetings serve as snapshots of the final draft, so you can track the evolution of the project.&lt;/li&gt;
&lt;li&gt;The story for the project (motivation)&lt;/li&gt;
&lt;li&gt;Outline the evaluation (how you will measure success)&lt;/li&gt;
&lt;li&gt;Fill in results as you get them each day (if you were successful)&lt;/li&gt;
&lt;li&gt;Working on the final draft of the paper or report helps you not leave things until the last minute&lt;/li&gt;
&lt;li&gt;Save filling in the rest (introduction, related works, discussion) until the week before you submit&lt;/li&gt;
&lt;li&gt;Two days before the deadline, every co-author should have read the final draft and made comments/edits&lt;/li&gt;
&lt;li&gt;Leave at least 30 minutes at the end of the workday to &lt;a href="http://www.evandowning.com/suggested-reads.html"&gt;read&lt;/a&gt; blog posts, papers, and saved Slack messages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Fridays&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.evandowning.com/suggested-reads.html"&gt;Read&lt;/a&gt; academic papers.&lt;/li&gt;
&lt;li&gt;Do various trainings and plan lunch-and-learn presentations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Retrospective&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;After each project is finished, do a retrospective for lessons learned.&lt;/li&gt;
&lt;li&gt;What went right? Why did it go right?&lt;/li&gt;
&lt;li&gt;What went wrong? Why did it go wrong? What will we do to prevent this in the future?&lt;/li&gt;
&lt;/ul&gt;</content><category term="misc"></category></entry><entry><title>Things I Use</title><link href="https://www.evandowning.com/things-i-use.html" rel="alternate"></link><published>2021-01-01T00:00:00-05:00</published><updated>2025-01-13T00:00:00-05:00</updated><author><name>Evan Downing</name></author><id>tag:www.evandowning.com,2021-01-01:/things-i-use.html</id><summary type="html">&lt;h2&gt;Personal&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Web browser: &lt;a href="https://brave.com/"&gt;Brave Browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Private email/calendar/drive/vpn/password manager: &lt;a href="https://proton.me/"&gt;Proton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Private messaging: &lt;a href="https://signal.org/"&gt;Signal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Multi-factor authentication: &lt;a href="https://www.yubico.com/"&gt;YubiKey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Transcriber: &lt;a href="https://goodsnooze.gumroad.com/l/macwhisper"&gt;MacWhisper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Creating demos: &lt;a href="https://obsproject.com/"&gt;OSB Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing papers: &lt;a href="https://www.overleaf.com/"&gt;Overleaf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing assistant: &lt;a href="https://www.grammarly.com/"&gt;Grammarly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Creating figures: &lt;a href="https://inkscape.org/"&gt;Inkscape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Paper organizer: &lt;a href="https://www.zotero.org/"&gt;Zotero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Feed reader: &lt;a href="https://feedly.com/"&gt;Feedly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Time shifting: &lt;a href="https://www.timeshifter.com/"&gt;Timeshifter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download video/audio: &lt;a href="https://github.com/yt-dlp/yt-dlp"&gt;yt-dlp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Genealogy: &lt;a href="https://gramps-project.org/blog/"&gt;gramps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tor …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;Personal&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Web browser: &lt;a href="https://brave.com/"&gt;Brave Browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Private email/calendar/drive/vpn/password manager: &lt;a href="https://proton.me/"&gt;Proton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Private messaging: &lt;a href="https://signal.org/"&gt;Signal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Multi-factor authentication: &lt;a href="https://www.yubico.com/"&gt;YubiKey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Transcriber: &lt;a href="https://goodsnooze.gumroad.com/l/macwhisper"&gt;MacWhisper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Creating demos: &lt;a href="https://obsproject.com/"&gt;OSB Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing papers: &lt;a href="https://www.overleaf.com/"&gt;Overleaf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing assistant: &lt;a href="https://www.grammarly.com/"&gt;Grammarly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Creating figures: &lt;a href="https://inkscape.org/"&gt;Inkscape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Paper organizer: &lt;a href="https://www.zotero.org/"&gt;Zotero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Feed reader: &lt;a href="https://feedly.com/"&gt;Feedly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Time shifting: &lt;a href="https://www.timeshifter.com/"&gt;Timeshifter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download video/audio: &lt;a href="https://github.com/yt-dlp/yt-dlp"&gt;yt-dlp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Genealogy: &lt;a href="https://gramps-project.org/blog/"&gt;gramps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tor: &lt;a href="https://www.torproject.org/"&gt;Tor Browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Software Development&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Project management: &lt;a href="https://asana.com/"&gt;asana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Time tracking: &lt;a href="https://toggl.com/"&gt;toggl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Text &amp;amp; Hex editor: &lt;a href="https://www.vim.org/"&gt;vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source code version control: &lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python version management: &lt;a href="https://github.com/pyenv/pyenv"&gt;pyenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python packaging: &lt;a href="https://docs.astral.sh/uv/"&gt;uv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python code template: &lt;a href="https://github.com/trailofbits/cookiecutter-python"&gt;cookiecutter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Analysis Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Dynamic analysis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automated Sandbox (malware): &lt;a href="https://github.com/kevoreilly/CAPEv2"&gt;CAPEv2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Honeypot: &lt;a href="https://github.com/cowrie/cowrie"&gt;cowrie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Debugging on Windows: &lt;a href="https://github.com/x64dbg/x64dbg"&gt;x64dbg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Debugging on GNU/Linux: &lt;a href="https://www.sourceware.org/gdb/"&gt;gdb&lt;/a&gt; with (&lt;a href="https://github.com/evandowning/Gdbinit/tree/develop"&gt;gdbinit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Network traffic collection &amp;amp; analysis: &lt;a href="https://www.wireshark.org/"&gt;Wireshark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fuzzing:&lt;ul&gt;
&lt;li&gt;Infrastructure: &lt;a href="https://google.github.io/clusterfuzz/"&gt;ClusterFuzz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C/C++ with clang: &lt;a href="https://llvm.org/docs/LibFuzzer.html"&gt;libFuzzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++: &lt;a href="https://github.com/google/fuzztest"&gt;fuzztest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Java: &lt;a href="https://github.com/CodeIntelligenceTesting/jazzer"&gt;jazzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python: &lt;a href="https://github.com/google/atheris"&gt;atheris&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Concolic execution: &lt;a href="https://angr.io/"&gt;angr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Static analysis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unpacking: &lt;a href="https://github.com/unipacker/unipacker"&gt;unipacker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembling &amp;amp; Decompiling: &lt;a href="https://github.com/NationalSecurityAgency/ghidra"&gt;Ghidra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Locating security bugs: &lt;a href="https://codeql.github.com/"&gt;CodeQL&lt;/a&gt; and &lt;a href="https://semgrep.dev/"&gt;Semgrep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pentesting framework: &lt;a href="https://www.kali.org/"&gt;kali&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;LLM Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Interacting with LLMs locally: &lt;a href="https://anythingllm.com/"&gt;AnythingLLM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Implementing LLM-based solutions:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://langfuse.com/"&gt;LangFuse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.langchain.com/"&gt;LangChain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Ongoing Skills Development&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Programming: &lt;a href="https://leetcode.com/"&gt;leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reverse engineering Windows binaries: &lt;a href="https://flare-on.com/"&gt;flare-on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Linux Hacking: &lt;a href="https://pwnable.kr/"&gt;pwnable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;System Design: &lt;a href="https://www.designgurus.io/course-play/grokking-the-system-design-interview"&gt;course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Operating System Engineering: &lt;a href="https://github.com/mit-pdos/xv6-riscv"&gt;xv6&lt;/a&gt; and &lt;a href="https://pdos.csail.mit.edu/6.1810"&gt;course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing: "Style: Lessons in Clarity and Grace" by William Colomb&lt;/li&gt;
&lt;li&gt;LinkedIn Learning: &lt;a href="https://www.linkedin.com/learning"&gt;courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Presenting Data and Information by Edward Tufte: &lt;a href="https://www.edwardtufte.com/online-course/"&gt;course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="misc"></category></entry><entry><title>Datasets</title><link href="https://www.evandowning.com/datasets.html" rel="alternate"></link><published>2019-01-01T00:00:00-05:00</published><updated>2023-02-18T00:00:00-05:00</updated><author><name>Evan Downing</name></author><id>tag:www.evandowning.com,2019-01-01:/datasets.html</id><summary type="html">&lt;p&gt;This is a good website for lots of general cybersecurity datasets: &lt;a href="http://www.secrepo.com/"&gt;http://www.secrepo.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Malware Samples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Large dataset: &lt;a href="https://github.com/sophos/SOREL-20M"&gt;https://github.com/sophos/SOREL-20M&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Malware from 2010-today: &lt;a href="https://www.vx-underground.org/"&gt;https://www.vx-underground.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Gathering Data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Static features for PE malware classification: &lt;a href="https://github.com/elastic/ember"&gt;https://github.com/elastic/ember&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dynamic features for clustering PE malware …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;This is a good website for lots of general cybersecurity datasets: &lt;a href="http://www.secrepo.com/"&gt;http://www.secrepo.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Malware Samples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Large dataset: &lt;a href="https://github.com/sophos/SOREL-20M"&gt;https://github.com/sophos/SOREL-20M&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Malware from 2010-today: &lt;a href="https://www.vx-underground.org/"&gt;https://www.vx-underground.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Gathering Data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Static features for PE malware classification: &lt;a href="https://github.com/elastic/ember"&gt;https://github.com/elastic/ember&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dynamic features for clustering PE malware: &lt;a href="https://github.com/rieck/malheur"&gt;https://github.com/rieck/malheur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Executing samples to collect dynamic behaviors: &lt;a href="https://github.com/kevoreilly/CAPEv2"&gt;https://github.com/kevoreilly/CAPEv2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="misc"></category></entry><entry><title>Suggested Reads</title><link href="https://www.evandowning.com/suggested-reads.html" rel="alternate"></link><published>2015-01-01T00:00:00-05:00</published><updated>2024-12-09T00:00:00-05:00</updated><author><name>Evan Downing</name></author><id>tag:www.evandowning.com,2015-01-01:/suggested-reads.html</id><summary type="html">&lt;h2&gt;Read these first&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.acm.org/doi/pdf/10.1145/1273445.1273458"&gt;How to read a paper (2007)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.usenix.org/conferences/author-resources/how-and-how-not-write-good-systems-paper"&gt;How (and how not) to write a good systems paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://syedirfanhyder.blogspot.com/2017/08/what-is-problem-statement-and-its-role-in-phd-research.html"&gt;Writing a Problem Statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://syedirfanhyder.blogspot.com/2017/08/what-is-thesis-statement-how-to-write.html"&gt;Writing a Thesis Statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/document/d/1KCSXYmInnBrOnFw5y3kQdNluLTYKt-jF1psyviNAeag/"&gt;Research as a Stochastic Decision Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Precision_and_recall"&gt;Precision and Recall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Papers&lt;/h2&gt;
&lt;p&gt;You can find all of these on &lt;a href="https://scholar.google.com/"&gt;Google Scholar&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Computer security threat monitoring …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;Read these first&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.acm.org/doi/pdf/10.1145/1273445.1273458"&gt;How to read a paper (2007)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.usenix.org/conferences/author-resources/how-and-how-not-write-good-systems-paper"&gt;How (and how not) to write a good systems paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://syedirfanhyder.blogspot.com/2017/08/what-is-problem-statement-and-its-role-in-phd-research.html"&gt;Writing a Problem Statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://syedirfanhyder.blogspot.com/2017/08/what-is-thesis-statement-how-to-write.html"&gt;Writing a Thesis Statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/document/d/1KCSXYmInnBrOnFw5y3kQdNluLTYKt-jF1psyviNAeag/"&gt;Research as a Stochastic Decision Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Precision_and_recall"&gt;Precision and Recall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Papers&lt;/h2&gt;
&lt;p&gt;You can find all of these on &lt;a href="https://scholar.google.com/"&gt;Google Scholar&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Computer security threat monitoring and surveillance (1980)&lt;/li&gt;
&lt;li&gt;Requirements and model for IDES - a real-time intrusion detection expert system (1985)&lt;/li&gt;
&lt;li&gt;An intrusion-detection model (1987) - Denning&lt;/li&gt;
&lt;li&gt;The SRI IDES statistical anomaly detector (1991) - Javitz and Valdes&lt;/li&gt;
&lt;li&gt;USTAT: A real-time intrusion detection system for UNIX (1993)&lt;/li&gt;
&lt;li&gt;Self-nonself discrimination in a computer (1994)&lt;/li&gt;
&lt;li&gt;Next-generation intrusion detection expert system (NIDES): A summary (1995)&lt;/li&gt;
&lt;li&gt;A sense of self for unix processes (1996) - Forrest&lt;/li&gt;
&lt;li&gt;Role-based access control models (1996) - Sandhu&lt;/li&gt;
&lt;li&gt;The base-rate fallacy and its implications for the difficulty of intrusion detection (1999) - Axelsson&lt;/li&gt;
&lt;li&gt;Bro: a system for detecting network intruders in real-time (1999) - Paxson&lt;/li&gt;
&lt;li&gt;Intrusion detection via static analysis (2001) - Wagner and Dean&lt;/li&gt;
&lt;li&gt;How to Own the Internet in Your Spare Time (2002) - Staniford&lt;/li&gt;
&lt;li&gt;Mimicry attacks on host-based intrusion detection systems (2002)&lt;/li&gt;
&lt;li&gt;"Why 6?" Defining the operational limits of stide, an anomaly-based intrusion detector (2002)&lt;/li&gt;
&lt;li&gt;Optical time-domain eavesdropping risks of CRT displays (2002)&lt;/li&gt;
&lt;li&gt;Formalizing sensitivity in static analysis for intrusion detection (2004) - Feng&lt;/li&gt;
&lt;li&gt;Polygraph: Automatically Generating Signatures for Polymorphic Worms (2005)&lt;/li&gt;
&lt;li&gt;Semantics-aware malware detection (2005)&lt;/li&gt;
&lt;li&gt;Automating mimicry attacks using static binary analysis (2005)&lt;/li&gt;
&lt;li&gt;Modeling Botnet Propagation Using Time Zones (2006) - Dagon&lt;/li&gt;
&lt;li&gt;Polymorphic Blending Attacks (2006) - Fogla&lt;/li&gt;
&lt;li&gt;Misleading worm signature generators using deliberate noise injection (2006)&lt;/li&gt;
&lt;li&gt;Paragraph: Thwarting signature learning by training maliciously (2006)&lt;/li&gt;
&lt;li&gt;Allergy attack against automatic signature generation (2006)&lt;/li&gt;
&lt;li&gt;A taxonomy of botnet structures (2007)&lt;/li&gt;
&lt;li&gt;Exploring multiple execution paths for malware analysis (2007)&lt;/li&gt;
&lt;li&gt;Limits of static analysis for malware detection (2007)&lt;/li&gt;
&lt;li&gt;BotMiner: Clustering Analysis of Network Traffic for Protocol-and Structure-Independent Botnet Detection (2008) - Gu&lt;/li&gt;
&lt;li&gt;All your iframes point to us (2008)&lt;/li&gt;
&lt;li&gt;Increased DNS Forgery Resistance Through 0x20-Bit Encoding (2008)&lt;/li&gt;
&lt;li&gt;Impeding Malware Analysis Using Conditional Code Obfuscation (2008)&lt;/li&gt;
&lt;li&gt;BitBlaze: A new approach to computer security via binary analysis (2008)&lt;/li&gt;
&lt;li&gt;Ether: malware analysis via hardware virtualization extensions (2008)&lt;/li&gt;
&lt;li&gt;Active botnet probing to identify obscure command and control channels (2009)&lt;/li&gt;
&lt;li&gt;Effective and Efficient Malware Detection at the End Host (2009)&lt;/li&gt;
&lt;li&gt;Emulating emulation-resistant malware (2009)&lt;/li&gt;
&lt;li&gt;Scalable, Behavior-Based Malware Clustering (2009)&lt;/li&gt;
&lt;li&gt;Outside the Closed World: On Using Machine Learning for Network Intrusion Detection (2010)&lt;/li&gt;
&lt;li&gt;Synthesizing near-optimal malware specifications from suspicious behaviors (2010)&lt;/li&gt;
&lt;li&gt;Efficient Detection of Split Personalities in Malware (2010)&lt;/li&gt;
&lt;li&gt;Identifying dormant functionality in malware programs (2010)&lt;/li&gt;
&lt;li&gt;Bitshred: Fast, scalable malware triage (2010)&lt;/li&gt;
&lt;li&gt;Behavioral Clustering of HTTP-Based Malware and Signature Generation Using Malicious Network Traces (2010)&lt;/li&gt;
&lt;li&gt;Detecting environment-sensitive malware (2011)&lt;/li&gt;
&lt;li&gt;Outside the Closed World: On Using Machine Learning for Network Intrusion Detection (2010)&lt;/li&gt;
&lt;li&gt;Detecting Malware Domains at the Upper DNS Hierarchy (2011)&lt;/li&gt;
&lt;li&gt;GQ: Practical containment for measuring modern malware systems (2011)&lt;/li&gt;
&lt;li&gt;The power of procrastination: detection and mitigation of execution-stalling malicious code (2011)&lt;/li&gt;
&lt;li&gt;Impeding Automated Malware Analysis with Environment-sensitive Malware (2012)&lt;/li&gt;
&lt;li&gt;From Throw-Away Traffic to Bots: Detecting the Rise of DGA-Based Malware (2012)&lt;/li&gt;
&lt;li&gt;Scalable fine-grained behavioral clustering of HTTP-based malware (2013)&lt;/li&gt;
&lt;li&gt;A11y Attacks: Exploiting Accessibility in Operating Systems (2014)&lt;/li&gt;
&lt;li&gt;Gyrus: A framework for user-intent monitoring of text-based networked applications (2014)&lt;/li&gt;
&lt;li&gt;Barecloud: bare-metal analysis-based evasive malware detection (2014)&lt;/li&gt;
&lt;li&gt;Guilt by association: large scale malware detection by mining file-relation graphs (2014)&lt;/li&gt;
&lt;li&gt;Needles in a Haystack: Mining Information from Public Dynamic Analysis Sandboxes for Malware Intelligence (2015)&lt;/li&gt;
&lt;li&gt;WebWitness: Investigating, Categorizing, and Mitigating Malware Download Paths (2015)&lt;/li&gt;
&lt;li&gt;Towards Making Systems Forget with Machine Unlearning (2015)&lt;/li&gt;
&lt;li&gt;Automatically Evading Classifiers: A Case Study on PDF Malware Classifiers (2016)&lt;/li&gt;
&lt;li&gt;Helping johnny to analyze malware: A usability-optimized decompiler and malware analysis user study (2016)&lt;/li&gt;
&lt;li&gt;Towards evaluating the robustness of neural networks (2017)&lt;/li&gt;
&lt;li&gt;Feature Squeezing Mitigates and Detects Carlini/Wagner Adversarial Examples (2017)&lt;/li&gt;
&lt;li&gt;Spotless Sandboxes: Evading Malware Analysis Systems using Wear-and-Tear Artifacts (2017)&lt;/li&gt;
&lt;li&gt;The Battle for New York: A Case Study of Applied Digital Threat Modeling at the Enterprise Level (2018)&lt;/li&gt;
&lt;li&gt;Enforcing unique code target property for control-flow integrity (2018)&lt;/li&gt;
&lt;li&gt;TESSERACT: Eliminating experimental bias in malware classification across space and time (2019)&lt;/li&gt;
&lt;li&gt;When Malware is Packin' Heat; Limits of Machine Learning Classifiers Based on Static Analysis Features (2020)&lt;/li&gt;
&lt;li&gt;An Observational Investigation of Reverse Engineers’ Processes (2020)&lt;/li&gt;
&lt;li&gt;When Malware Changed Its Mind: An Empirical Study of Variable Program Behaviors in the Real World (2021)&lt;/li&gt;
&lt;li&gt;Arbitrar: User-guided api misuse detection (2021)&lt;/li&gt;
&lt;li&gt;An Inside Look into the Practice of Malware Analysis (2021)&lt;/li&gt;
&lt;li&gt;BODMAS: An Open Dataset for Learning based Temporal Analysis of PE Malware (2021)&lt;/li&gt;
&lt;li&gt;CADE: Detecting and Explaining Concept Drift Samples for Security Applications (2021)&lt;/li&gt;
&lt;li&gt;Proof-of-Learning: Definitions and Practice (2021)&lt;/li&gt;
&lt;li&gt;RE-Mind: a First Look Inside the Mind of a Reverse Engineer (2022)&lt;/li&gt;
&lt;li&gt;DEEPDI: Learning a Relational Graph Convolutional Network Model on Instructions for Fast and Accurate Disassembly (2022)&lt;/li&gt;
&lt;li&gt;Transcending transcend: Revisiting malware classification in the presence of concept drift (2022)&lt;/li&gt;
&lt;li&gt;99% False Positives: A Qualitative Study of SOC Analysts' Perspectives on Security Alarms (2022)&lt;/li&gt;
&lt;li&gt;Dos and Don'ts of Machine Learning in Computer Security (2022)&lt;/li&gt;
&lt;li&gt;DnD: A Cross-Architecture Deep Neural Network Decompiler (2022)&lt;/li&gt;
&lt;li&gt;Ground Truth for Binary Disassembly is Not Easy (2022)&lt;/li&gt;
&lt;li&gt;Everybody’s Got ML, Tell Me What Else You Have: Practitioners' Perception of ML-Based Security Tools and Explanations (2023)&lt;/li&gt;
&lt;li&gt;Humans vs. Machines in Malware Classification (2023)&lt;/li&gt;
&lt;li&gt;No One Drinks From the Firehose: How Organizations Filter and Prioritize Vulnerability Information (2023)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Academic cybersecurity conferences&lt;/h2&gt;
&lt;p&gt;Tier 1: &lt;a href="https://people.engr.tamu.edu/guofei/sec_conf_stat.htm"&gt;source1&lt;/a&gt; &amp;amp; &lt;a href="https://portal.core.edu.au/conf-ranks/?search=security&amp;amp;by=all&amp;amp;source=all&amp;amp;sort=arank&amp;amp;page=1"&gt;source2&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;S&amp;amp;P: &lt;a href="https://www.ieee-security.org/TC/SP-Index.html"&gt;https://www.ieee-security.org/TC/SP-Index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;USENIX Security Symposium: &lt;a href="https://www.usenix.org/conferences"&gt;https://www.usenix.org/conferences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CCS: &lt;a href="https://www.sigsac.org/ccs.html"&gt;https://www.sigsac.org/ccs.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NDSS: &lt;a href="https://www.ndss-symposium.org/"&gt;https://www.ndss-symposium.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Talks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5VnDaHBi8dM"&gt;Binky Pointer Fun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ajGX7odA87k"&gt;James Mickens: Why Do Keynote Speakers Keep Suggesting That Improving Security Is Possible?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4zZZHx1YGzk"&gt;Wenke Lee: Machine Learning and Security: The Good, The Bad, and The Ugly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Blog Posts&lt;/h2&gt;
&lt;h3&gt;Machine Learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://machinelearningmastery.com/difference-test-validation-datasets/"&gt;What is the Difference Between Test and Validation Datasets?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://machinelearningmastery.com/k-fold-cross-validation/"&gt;A Gentle Introduction to k-fold Cross-Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://machinelearningmastery.com/how-to-configure-k-fold-cross-validation/"&gt;How to Configure k-Fold Cross-Validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Machine Learning for Security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.welivesecurity.com/2017/06/20/machine-learning-eset-road-augur/"&gt;Machine learning by ESET: The road to Augur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.welivesecurity.com/2017/04/11/fighting-post-truth-reality-cybersecurity/"&gt;Fighting post-truth with reality in cybersecurity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.welivesecurity.com/2017/04/12/dont-buy-elixir-youth-machine-learning-not-magic/"&gt;Machine learning is not magic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.welivesecurity.com/2017/04/18/pr-reality-collide-truth-machine-learning-cybersecurity/"&gt;When PR and reality collide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.welivesecurity.com/2017/04/25/machine-learning-math-cant-trump-smart-attackers/"&gt;Machine learning and math can’t trump smart attackers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.welivesecurity.com/2017/05/02/single-protective-technology-means-single-point-failure/"&gt;A single protective technology means a single point of failure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.welivesecurity.com/2017/05/09/false-positives-can-costly-malware-infection/"&gt;False positives can be more costly than a malware infection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Software Supply Chain&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwaremaxims.com/blog/not-a-supplier"&gt;I am not a supplier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Mailing lists&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.internetgovernance.org/"&gt;https://www.internetgovernance.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.crossborderdataforum.org/"&gt;https://www.crossborderdataforum.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;RSS feeds&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://boostsecurity.io/blog/rss.xml"&gt;https://boostsecurity.io/blog/rss.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ctftime.org/event/list/upcoming/rss/"&gt;https://ctftime.org/event/list/upcoming/rss/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://exploit.in/feed/"&gt;https://exploit.in/feed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mandiant.com/resources/blog/rss.xml"&gt;https://www.mandiant.com/resources/blog/rss.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/security/blog/feed/"&gt;https://www.microsoft.com/en-us/security/blog/feed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mihai.page/rss.xml"&gt;https://mihai.page/rss.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openssf.org/feed/"&gt;https://openssf.org/feed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.darpa.mil/rss/opportunities.xml"&gt;https://www.darpa.mil/rss/opportunities.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://googleprojectzero.blogspot.com/feeds/posts/default"&gt;http://googleprojectzero.blogspot.com/feeds/posts/default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reverse.put.as/index.xml"&gt;https://reverse.put.as/index.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://signal.org/blog/rss.xml"&gt;https://signal.org/blog/rss.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.trailofbits.com/feed/"&gt;http://blog.trailofbits.com/feed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.virustotal.com/feeds/posts/default"&gt;http://blog.virustotal.com/feeds/posts/default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://infosec.exchange/@xbow.rss"&gt;https://infosec.exchange/@xbow.rss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nesbitt.io/feed.xml"&gt;https://nesbitt.io/feed.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dustingram.com/atom.xml"&gt;https://dustingram.com/atom.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.yossarian.net/feed.xml"&gt;http://blog.yossarian.net/feed.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.miketheman.net/feed/"&gt;http://www.miketheman.net/feed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sethmlarson.dev/feed"&gt;https://sethmlarson.dev/feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://some-natalie.dev/feed.xml"&gt;https://some-natalie.dev/feed.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/oldnewthing/feed"&gt;https://devblogs.microsoft.com/oldnewthing/feed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Books&lt;/h2&gt;
&lt;h3&gt;Computer Science&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to the Theory of Computation (Sipser)&lt;/li&gt;
&lt;li&gt;Compilers: Principles, Techniques, and Tools (Aho, Lam, Sethi, Ullman)&lt;/li&gt;
&lt;li&gt;Computer Networking (Kurose and Ross)&lt;/li&gt;
&lt;li&gt;Introduction to Modern Cryptography (Katz and Lindell)&lt;/li&gt;
&lt;li&gt;Qualitative Analysis: Constructing Grounded Theory (Charmaz)&lt;/li&gt;
&lt;li&gt;Machine Learning (Mitchell)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Software Development&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pro Git (Chacon and Straub)&lt;/li&gt;
&lt;li&gt;Fluent Python (Ramalho)&lt;/li&gt;
&lt;li&gt;Deep Learning with Python (Chollet)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cybersecurity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;From Day Zero to Zero Day (Lim)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://phrack.org/"&gt;Phrack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Shellcoder's Handbook: Discovering and Exploiting Security Holes (Anley, Heasman, Linder, Richarte)&lt;/li&gt;
&lt;li&gt;The Hacker Playbook 3: Practical Guide to Penetration Testing (Kim)&lt;/li&gt;
&lt;li&gt;Linkers &amp;amp; Loaders (Levine)&lt;/li&gt;
&lt;li&gt;Rootkits (Butler and Hoglund)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appsec.guide/"&gt;Trail of Bits Testing Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Practical Malware Analysis (Sikorski and Honig)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Style: Lessons in Clarity and Grace (Colomb)&lt;/li&gt;
&lt;li&gt;The Lean Startup (Eric Ries)&lt;/li&gt;
&lt;li&gt;How to Win Friends and Influence People (Carnegie)&lt;/li&gt;
&lt;li&gt;Mini Farming: Self-Sufficiency on 1/4 Acre (Brett Markham)&lt;/li&gt;
&lt;/ul&gt;</content><category term="misc"></category></entry></feed>